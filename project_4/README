os-project by Dominic Holschen
Project 4
See the repo on github: https://github.com/domHolschen/os-project, folder project_4

To Compile:
Use the `make` command to invoke the Makefile and create the executables `worker` and `oss`.
The `clockUtils` files are library code created for the executables that get compiled into them when `make` is executed.
When oss is executed, it creates a file called `keyfile.txt`. That is necessary for the program to run but it is recreated at runtime if it does not exist.

These tools use a simulated clock so times displayed will likely be much faster realtime.

worker:
Used by oss. Not useful invoked by itself in the command line.

oss:
Tool with 6 different options. It invokes `worker` processes and continues until all instances are created and finished.
Usage: oss [-h]
This tool simulates an operating system creating processes at random times. It schedules and preempts processes using a multi level feedback queue.
There is a chance that the processes will either terminate or wait on a (simulated) I/O event before using all of their time.
Every half second it prints the process table of its children and the scheduler's queues, including the blocked queue.
The command normally finishes after 100 processes have been created and terminated, after which metrics on the simulated OS will be available.
After 3 real-life seconds (not using the simulated clock) it will shut down as a failsafe.
The logs will be backed up in the log.txt file (it will be created if it doesn't already exist), but it will overwrite it in subsequent runs so please back it up if you need to retain them.